{"Batch":[{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetClusterUuid","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.GetClusterUuid.output.HttpStatusCode 200}}","Message":"Get Cluster UUID successful.","ObjectType":"workflow.Outcome"},{"Condition":"true","Message":"Get Cluster UUID failed","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Uuid","ObjectType":"content.Parameter","Path":"$.Uuid","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Local","Url":"/v1/storage/NetAppClusters/{{.global.task.input.StorageDevice.Moid}}"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetNetAppiGroupDetails","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.GetNetAppiGroupDetails.output.HttpStatusCode 400) (lt .global.GetNetAppiGroupDetails.output.HttpStatusCode 600)}}","Message":"{{if .global.GetNetAppiGroupDetails.output.Errors}}{{$err := (index .global.GetNetAppiGroupDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppiGroupDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{(eq .global.GetNetAppiGroupDetails.output.HttpStatusCode 200)}}}","Message":"Retrieved Igroup details successfully.","ObjectType":"workflow.Outcome"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"iGroupUuid","ObjectType":"content.Parameter","Path":"$.records[0].uuid","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/protocols/san/igroups?name={{.global.task.input.HostName}}\u0026\u0026svm.name={{.global.task.input.StorageVendorVirtualMachineName.StorageVirtualMachineName}}"},{"Body":"{ {{$InitiatorList:= AsSlice .global.task.input.WWNs .global.task.input.IQNs}} \"records\": [{{range $index, $initiator:= $InitiatorList}} {{if $index}},{{end}}{\"name\": \"{{$initiator}}\"} {{end}}] }","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"AddInitiators","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.AddInitiators.output.HttpStatusCode 400) (lt .global.AddInitiators.output.HttpStatusCode 600)}}","Message":"{{if .global.AddInitiators.output.Errors}}{{$err := (index .global.AddInitiators.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.AddInitiators.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{(eq .global.AddInitiators.output.HttpStatusCode 201)}}","Message":"Storage initiators added successfully.","ObjectType":"workflow.Outcome"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Test","ObjectType":"content.Parameter","Path":"$","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/protocols/san/igroups/{{.global.GetNetAppiGroupDetails.output.iGroupUuid}}/initiators"},{"Body":"{\"Type\":\"storage.NetAppInitiatorGroup\",\"Queries\": [{\"Uuid\": \"{{.global.GetNetAppiGroupDetails.output.iGroupUuid}}\", \"Key\":\"{{.global.GetClusterUuid.output.Uuid}}:type=igroup,uuid={{.global.GetNetAppiGroupDetails.output.iGroupUuid}}\"}],\"RegisteredDevice\":\"{{.global.task.target.RegisteredDeviceMoid}}\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"UpdateInventory","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.UpdateInventory.output.HttpStatusCode 200}}","Message":"Storage initiators added successfully.","ObjectType":"workflow.Outcome"},{"Condition":"{{ne .global.UpdateInventory.output.HttpStatusCode 200}}","Message":"{{.global.UpdateInventory.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","TargetType":"Local","Url":"/v1/task/NetAppScopedInventories"}],"ClassId":"workflow.BatchApiExecutor","Constraints":{"ObjectType":"workflow.TaskConstraints","TargetDataType":{"ObjectType":"storage.NetAppCluster"}},"Description":"Add NetApp Initiators","ErrorResponseHandler":{"ObjectType":"workflow.ErrorResponseHandler","Selector":"Name eq \"NetAppApiErrorResponseHandler\""},"Name":"AddNetAppInitiators","ObjectType":"workflow.BatchApiExecutor","Output":{"HostName":"{{.global.task.input.HostName}}","IQNs":"{{.global.task.input.IQNs | ToJson}}","WWNs":"{{.global.task.input.WWNs| ToJson}}"},"RetryFromFailedApi":true,"SharedScope":"shared","SkipOnCondition":"{{if or .global.task.input.WWNs  .global.task.input.IQNs}} false {{else}} true {{end}}","TaskDefinition":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"AddNetAppInitiators\" and Version eq 2"}}