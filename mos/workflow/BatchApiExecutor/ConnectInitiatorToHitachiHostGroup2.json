{"Batch":[{"Body":"{ {{if .global.task.input.WWNs}}\"hostWwn\": \"{{index .global.task.input.WWNs 0}}\", {{else if .global.task.input.IQNs}}\"iscsiName\": \"{{index .global.task.input.IQNs 0}}\", {{end}}\"portId\": \"{{.global.task.input.StorageVendorHostIdentifier.HitachiHostGroupParameters.PortId}}\", \"hostGroupNumber\": {{.global.task.input.StorageVendorHostIdentifier.HitachiHostGroupParameters.HostGroupNumber}} }","ContentType":"json","EndpointRequestType":"Internal","Headers":{"Response-Job-Status":["Completed"]},"Method":"POST","Name":"ConnectInitiatorToHitachiHostGroup","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{(eq .global.ConnectInitiatorToHitachiHostGroup.output.HttpStatusCode 503) }}","Error":true,"Message":"HTTP Status code: {{.global.ConnectInitiatorToHitachiHostGroup.output.HttpStatusCode}}: {{if .global.ConnectInitiatorToHitachiHostGroup.output.Errors}}{ {{range $k, $v := .global.ConnectInitiatorToHitachiHostGroup.output.Errors}}[{{$k}}]: \"{{$v}}\" {{end}}}{{else}}REST API server or the storage system is busy. Try again later.{{end}}","ObjectType":"workflow.Outcome"},{"Condition":"{{and (ge .global.ConnectInitiatorToHitachiHostGroup.output.HttpStatusCode 400) (lt .global.ConnectInitiatorToHitachiHostGroup.output.HttpStatusCode 600)}}","Error":true,"Message":"HTTP Status code: {{.global.ConnectInitiatorToHitachiHostGroup.output.HttpStatusCode}}: {{if .global.ConnectInitiatorToHitachiHostGroup.output.Errors}}{ {{range $k, $v := .global.ConnectInitiatorToHitachiHostGroup.output.Errors}}[{{$k}}]: \"{{$v}}\" {{end}}}{{else}}Http error.{{end}}","ObjectType":"workflow.Outcome"},{"Condition":"{{ ContainsString .global.ConnectInitiatorToHitachiHostGroup.output.State \"Failed\" }}","Error":true,"Message":"The state of the job is \"Failed\". {{if .global.ConnectInitiatorToHitachiHostGroup.output.Errors}}{ {{range $k, $v := .global.ConnectInitiatorToHitachiHostGroup.output.Errors}}[{{$k}}]: \"{{$v}}\" {{end}}}{{end}}","ObjectType":"workflow.Outcome"},{"Condition":"{{ ContainsString .global.ConnectInitiatorToHitachiHostGroup.output.State \"Unknown\" }}","Error":true,"Message":"The state of the job is \"Unknown\".","ObjectType":"workflow.Outcome"},{"Condition":"{{ ContainsString .global.ConnectInitiatorToHitachiHostGroup.output.State \"Succeeded\" }}","Message":"WWN or IQN registered successfully.","ObjectType":"workflow.Outcome"},{"Condition":"true","Error":true,"Message":"Unexpected internal error.","ObjectType":"workflow.Outcome"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"HitachiHostWwn_Iqn","ObjectType":"content.Parameter","Path":"$.affectedResources[0]","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"State","ObjectType":"content.Parameter","Path":"$.state","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"CompletedTime","ObjectType":"content.Parameter","Path":"$.completedTime","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Errors","ObjectType":"content.Parameter","Path":"$","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Endpoint","Url":"{{if .global.task.input.WWNs}}/ConfigurationManager/v1/objects/storages/{STORAGEDEVICEID}/host-wwns{{else}}/ConfigurationManager/v1/objects/storages/{STORAGEDEVICEID}/host-iscsis{{end}}"},{"Body":"{\"Type\":\"storage.HitachiHost\",\"NamingProperty\":\"HostGroupId\",\"Values\": [\"{{.global.task.input.StorageVendorHostIdentifier.HitachiHostGroupParameters.PortId}},{{.global.task.input.StorageVendorHostIdentifier.HitachiHostGroupParameters.HostGroupNumber}}\"],\"RegisteredDevice\":\"{{.global.task.target.RegisteredDeviceMoid}}\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"UpdateInventory","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.UpdateInventory.output.HttpStatusCode 200}}","Message":"WWN or IQN registered successfully.","ObjectType":"workflow.Outcome"},{"Condition":"{{ne .global.UpdateInventory.output.HttpStatusCode 200}}","Message":"{{.global.UpdateInventory.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[],"Types":[]},"TargetType":"Local","Url":"/v1/task/HitachiScopedInventories"}],"ClassId":"workflow.BatchApiExecutor","Constraints":{"ObjectType":"workflow.TaskConstraints","TargetDataType":{"ObjectType":"storage.HitachiArray"}},"Description":"Register the host bus adapter WWN for the host group of the specified port.","Name":"ConnectInitiatorToHitachiHostGroup","ObjectType":"workflow.BatchApiExecutor","Output":{"HostName":"{{.global.task.input.HostName}}","IQNs":"{{.global.task.input.IQNs | ToJson}}","WWNs":"{{.global.task.input.WWNs| ToJson}}"},"RetryFromFailedApi":true,"SharedScope":"shared","SkipOnCondition":"{{not (or .global.task.input.WWNs .global.task.input.IQNs)}}","TaskDefinition":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"ConnectInitiatorToHitachiHostGroup\" and Version eq 2"}}